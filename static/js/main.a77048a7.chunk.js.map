{"version":3,"sources":["components/Form.jsx","actions/index.js","components/WeatherCard.jsx","App.js","reducers/placeDataReducer.js","reducers/placeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","place","useSelector","state","dispatch","useDispatch","className","type","value","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","updateplaceData","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","id","humidity","precip_mm","App","PlaceDataReducer","action","PlaceReducer","RootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA0BeA,EAxBF,WACT,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SACnCG,EAAWC,cACjB,OACI,qBAAKC,UAAY,YAAjB,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAY,cAAjB,UACI,uBAAOC,KAAO,OAAOC,MAASP,EAC9BQ,SAAY,SAACC,GAAD,OACZN,ECXA,SAACH,GACjB,MAAO,CACHM,KAAO,eACPI,QAAUV,GDQWW,CAAYF,EAAEG,OAAOL,WAG9B,wBAAQF,UAAY,kBAChBQ,QAAW,kBACXV,ECTA,SAACH,GACrB,OAAO,SAACG,GACJW,MAAM,mFAAD,OAAoFd,IACxFe,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEFf,EAAS,CACLG,KAAM,mBACNI,QAASQ,QDCQC,CAAgBnB,KAF7B,4BE0BLoB,EAtCK,WAChB,IAAMC,EAAYpB,aAAY,SAAAC,GAAK,OAAIA,EAAMmB,aAC7C,OACI,qBAAKhB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAY,sCAAjB,SACI,qBAAKA,UAAY,OAAjB,SACKgB,EAAUC,SACX,gCACI,qBAAKC,IAAOF,EAAUG,QAAQC,UAAUC,KAAMC,IAAM,gBACpD,sBAAKtB,UAAY,OAAjB,UAAyBgB,EAAUG,QAAQI,OAA3C,WACA,qBAAKvB,UAAY,OAAjB,SAAyBgB,EAAUG,QAAQC,UAAUI,OACrD,qBAAKxB,UAAY,OAAjB,SAAyBgB,EAAUC,SAASQ,OAC5C,qBAAKzB,UAAY,YAAjB,SACI,sBAAKA,UAAW,UAAhB,UACI,sBAAKA,UAAY,QAAjB,UACI,qBAAKA,UAAY,QAAjB,sBACA,sBAAKA,UAAY,OAAjB,UAAyBgB,EAAUG,QAAQO,SAAS,sBAAMC,GAAK,OAAX,sBAExD,sBAAK3B,UAAY,QAAjB,UACI,qBAAKA,UAAY,QAAjB,qBACA,sBAAKA,UAAY,OAAjB,UAAyBgB,EAAUG,QAAQS,SAAS,sBAAMD,GAAK,OAAX,qBAExD,sBAAK3B,UAAY,QAAjB,UACI,qBAAKA,UAAY,QAAjB,2BACA,sBAAKA,UAAY,OAAjB,UAAyBgB,EAAUG,QAAQU,UAAU,sBAAMF,GAAK,OAAX,8BAKrE,0DClBTG,MATf,WACE,OACE,sBAAK9B,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCDU+B,EARU,WAA0B,IAAzBlC,EAAwB,uDAAhB,GAAKmC,EAAW,uCAC9C,MAAmB,qBAAhBA,EAAO/B,KACC+B,EAAO3B,QAEXR,GCMIoC,EARM,WAA0B,IAAzBpC,EAAwB,uDAAhB,GAAKmC,EAAW,uCAC1C,MAAmB,iBAAhBA,EAAO/B,KACC+B,EAAO3B,QAEXR,GCGIqC,EALKC,YAAgB,CAChCnB,UAAYe,EACZpC,MAAQsC,ICAGG,EAFDC,YAAYH,EAAcI,YAAgBC,MCExDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.a77048a7.chunk.js","sourcesContent":["import { useDispatch , useSelector } from 'react-redux';\r\nimport { updatePlace ,  updateplaceData } from '../actions';\r\nconst Form = () => { \r\n    const place = useSelector(state => state.place);\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <div className = \"container\">\r\n            <div className=\"row\">\r\n                <div className = \"col-12 form\">\r\n                    <input type = \"text\" value = {place} \r\n                    onChange = {(e) =>\r\n                    dispatch(updatePlace(e.target.value))\r\n                }\r\n                    />\r\n                    <button className = \"btn btn-primary\" \r\n                        onClick = {() => \r\n                        dispatch(updateplaceData(place))} \r\n                    >Submit</button>\r\n                  </div>\r\n               \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","const updatePlace = (place) => {\r\n    return {\r\n        type : \"UPDATE_PLACE\" , \r\n        payload : place\r\n    };\r\n};\r\n\r\nconst updateplaceData = (place) => {\r\n    return (dispatch) => {\r\n        fetch(`https://api.weatherapi.com/v1/current.json?key=b648fb4374964e87a5e54310210608&q=${place}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // console.log(data)\r\n            dispatch({\r\n                type: \"UPDATE_PLACEDATA\" ,\r\n                payload: data,\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport {updatePlace , updateplaceData};","import { useSelector } from 'react-redux' ;\r\n\r\nconst WeatherCard = () => {\r\n    const placeData = useSelector(state => state.placeData);\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className = \"offset-md-4 col-12 col-md-4 weather\">\r\n                    <div className = \"card\">\r\n                        {placeData.location ? \r\n                        <div>\r\n                            <img src = {placeData.current.condition.icon} alt = \"weather img\"></img>\r\n                            <div className = \"temp\">{placeData.current.temp_c}Â° </div>\r\n                            <div className = \"desc\">{placeData.current.condition.text}</div>\r\n                            <div className = \"city\">{placeData.location.name}</div>\r\n                            <div className = \"container\">\r\n                                <div className= \"row whp\">\r\n                                    <div className = \"col-4\">\r\n                                        <div className = \"title\">Wind Now</div>\r\n                                        <div className = \"data\">{placeData.current.wind_kph}<span id = \"unit\">KM</span></div>\r\n                                    </div>\r\n                                    <div className = \"col-4\">\r\n                                        <div className = \"title\">Humdity</div>\r\n                                        <div className = \"data\">{placeData.current.humidity}<span id = \"unit\">%</span></div>\r\n                                    </div>\r\n                                    <div className = \"col-4\">\r\n                                        <div className = \"title\">Precipitation</div>\r\n                                        <div className = \"data\">{placeData.current.precip_mm}<span id = \"unit\">MM</span></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>:\r\n                        <h2>Place Not Found</h2>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;","import \"bootstrap/dist/css/bootstrap.min.css\" ;\nimport './App.css';\nimport Form from './components/Form';\nimport WeatherCard from './components/WeatherCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Form/>\n     <WeatherCard/>\n    </div>\n  );\n}\n\nexport default App;\n","const PlaceDataReducer = (state = {} , action) => {\r\n    if(action.type === \"UPDATE_PLACEDATA\")\r\n        return action.payload;\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default PlaceDataReducer;","\r\n\r\nconst PlaceReducer = (state = \"\" , action) => {\r\n    if(action.type === \"UPDATE_PLACE\")\r\n        return action.payload\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default PlaceReducer;","import { combineReducers } from 'redux';\r\nimport PlaceDataReducer from './placeDataReducer';\r\nimport PlaceReducer from './placeReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    placeData : PlaceDataReducer , \r\n    place : PlaceReducer\r\n})\r\n\r\nexport default RootReducer;","import { createStore , applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers';\r\n\r\nconst store = createStore(RootReducer , applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}